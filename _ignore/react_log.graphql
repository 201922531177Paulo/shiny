interface LogEntry {
  action: String!  # name of action
  id: String!      # ID of entry
  session: String! # machine session id
  time: Float!     # seconds since ?
}

type ReactLog {
  log: [LogEntry!]!
}



# {
#   "action": "valueChange",
#   "id": "clientData$allowDataUriScheme",
#   "value": " logi TRUE",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.01288
# },
type ValueChangeEntry implements LogEntry {
  action: String! = "valueChange"
  id: String! # ContextEntry label
  session: String!
  time: Float!
  value: String! # R captured output of value
}

# {
#   "action": "ctx",
#   "id": "1",
#   "label": "output$plot",
#   "srcref": [7, 31, 7, 52, 31, 52],
#   "srcfile": "",
#   "type": "observer",
#   "prevId": "",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.01408
# },
type ContextEntry implements LogEntry {
  action: String! = "ctx"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
  label: String! # display label of node
  srcref: [Int!] # R srcref to work with srcfile
  srcfile: String # R srcfile to work with srcref
  type: "observable" | "observer" | "isolate"
    # observer - end node
    # observable - transition node
    # isolate - computation time to read... should be handled differently
  prevID: String! # previous ContextEntry id
}



# {
#   "action": "invalidate",
#   "id": "1",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.01413
# },
type InvalidateEntry implements LogEntry {
  action: String! = "invalidate"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
}



# {
#   "action": "enter",
#   "id": "2",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.03947
# },
type EnterEntry implements LogEntry {
  action: String! = "enter"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
}



# {
#   "action": "exit",
#   "id": "4",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.04095
# },
type ExitEntry implements LogEntry {
  action: String! = "enter"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
}



# {
#   "action": "depId",
#   "id": "2",
#   "dependsOn": "3",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.1749
# },
type DependencyIdEntry implements LogEntry {
  action: String! = "depId"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
  dependsOn: String! # ContextEntry id
}

# {
#   "action": "dep",
#   "id": "2",
#   "dependsOn": "clientData$output_plot_width",
#   "session": "6026f69d772a5088a6bea5a390d05033",
#   "time": 1522262323.04025
# },
type DependencyEntry implements LogEntry {
  action: String! = "dep"
  id: String! # ContextEntry id
  session: String!
  time: Float!
  # -----------------
  dependsOn: String! # ContextEntry label
}
